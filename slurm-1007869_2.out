Job 1007869: Running on node(s) kersey
Job 1007869: Started at 2024-04-22 15:11:55+0200
Monitor this job here: http://monitoring.pegasus.kl.dfki.de/d/slurm-job-details/job-details?var-jobid=1007869&from=1713791515000
srun: jobinfo: version v1.0.0
Job 1007869: Running on node(s) kersey
Job 1007869: Started at 2024-04-22 15:11:55+0200
Monitor this job here: http://monitoring.pegasus.kl.dfki.de/d/slurm-job-details/job-details?var-jobid=1007869&from=1713791515000
[rank: 0] Global seed set to 737
tensor([[1., 0., 0.],
        [0., 1., 0.],
        [0., 0., 1.]])
[94m[INFO] [0] num_batchees: 5[0m
[94m[INFO] [1] num_batchees: 1[0m
[94m[INFO] [2] num_batchees: 1[0m
MAF(
  (transforms): ModuleList(
    (0): MaskedAutoregressiveTransform(
      (base): MonotonicAffineTransform()
      (order): [0, 1, 2]
      (hyper): MaskedMLP(
        (0): MaskedLinear(in_features=3, out_features=32, bias=True)
        (1): ELU(alpha=1.0)
        (2): MaskedLinear(in_features=32, out_features=6, bias=True)
      )
    )
  )
  (base): DiagNormal(loc: torch.Size([3]), scale: torch.Size([3]))
)
scaler_transform StandardTransform(shift=tensor([0.0075, 0.0817, 0.0025]), scale=tensor([0.9934, 9.9886, 3.1909]))
StandardScaler(
		mu_=tensor([[0.0075, 0.0817, 0.0025]]), 
		scale_=tensor([[0.9934, 9.9886, 3.1909]])
)
> /netscratch/gvitanov/causal-flows-assumptions/main.py(62)<module>()
-> if not load_model:
(Pdb) 
Traceback (most recent call last):
  File "/netscratch/gvitanov/causal-flows-assumptions/main.py", line 62, in <module>
    if not load_model:
  File "/netscratch/gvitanov/causal-flows-assumptions/main.py", line 62, in <module>
    if not load_model:
  File "/netscratch/gvitanov/envs/cnf/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/netscratch/gvitanov/envs/cnf/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
[rank: 0] Global seed set to 737
tensor([[1.0000, 0.3333, 0.0000],
        [0.3333, 1.0000, 0.0000],
        [0.0000, 0.0000, 1.0000]])
[94m[INFO] [0] num_batchees: 5[0m
[94m[INFO] [1] num_batchees: 1[0m
[94m[INFO] [2] num_batchees: 1[0m
MAF(
  (transforms): ModuleList(
    (0): MaskedAutoregressiveTransform(
      (base): MonotonicAffineTransform()
      (order): [0, 1, 2]
      (hyper): MaskedMLP(
        (0): MaskedLinear(in_features=3, out_features=32, bias=True)
        (1): ELU(alpha=1.0)
        (2): MaskedLinear(in_features=32, out_features=6, bias=True)
      )
    )
  )
  (base): DiagNormal(loc: torch.Size([3]), scale: torch.Size([3]))
)
scaler_transform StandardTransform(shift=tensor([0.0075, 0.0788, 0.0018]), scale=tensor([0.9934, 9.6532, 3.1260]))
StandardScaler(
		mu_=tensor([[0.0075, 0.0788, 0.0018]]), 
		scale_=tensor([[0.9934, 9.6532, 3.1260]])
)
> /netscratch/gvitanov/causal-flows-assumptions/main.py(62)<module>()
-> if not load_model:
(Pdb) 
Traceback (most recent call last):
  File "/netscratch/gvitanov/causal-flows-assumptions/main.py", line 62, in <module>
    if not load_model:
  File "/netscratch/gvitanov/causal-flows-assumptions/main.py", line 62, in <module>
    if not load_model:
  File "/netscratch/gvitanov/envs/cnf/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/netscratch/gvitanov/envs/cnf/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
[rank: 0] Global seed set to 737
tensor([[1.0000, 0.6667, 0.0000],
        [0.6667, 1.0000, 0.0000],
        [0.0000, 0.0000, 1.0000]])
[94m[INFO] [0] num_batchees: 5[0m
[94m[INFO] [1] num_batchees: 1[0m
[94m[INFO] [2] num_batchees: 1[0m
MAF(
  (transforms): ModuleList(
    (0): MaskedAutoregressiveTransform(
      (base): MonotonicAffineTransform()
      (order): [0, 1, 2]
      (hyper): MaskedMLP(
        (0): MaskedLinear(in_features=3, out_features=32, bias=True)
        (1): ELU(alpha=1.0)
        (2): MaskedLinear(in_features=32, out_features=6, bias=True)
      )
    )
  )
  (base): DiagNormal(loc: torch.Size([3]), scale: torch.Size([3]))
)
scaler_transform StandardTransform(shift=tensor([0.0075, 0.0750, 0.0008]), scale=tensor([0.9934, 9.3049, 3.0595]))
StandardScaler(
		mu_=tensor([[0.0075, 0.0750, 0.0008]]), 
		scale_=tensor([[0.9934, 9.3049, 3.0595]])
)
> /netscratch/gvitanov/causal-flows-assumptions/main.py(62)<module>()
-> if not load_model:
(Pdb) 
Traceback (most recent call last):
  File "/netscratch/gvitanov/causal-flows-assumptions/main.py", line 62, in <module>
    if not load_model:
  File "/netscratch/gvitanov/causal-flows-assumptions/main.py", line 62, in <module>
    if not load_model:
  File "/netscratch/gvitanov/envs/cnf/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/netscratch/gvitanov/envs/cnf/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
[rank: 0] Global seed set to 737
tensor([[1., 1., 0.],
        [1., 1., 0.],
        [0., 0., 1.]])
Traceback (most recent call last):
  File "/netscratch/gvitanov/causal-flows-assumptions/causal_nf/distributions/scm.py", line 9, in __init__
    super(SCM, self).__init__(base_distribution, transform, validate_args)
  File "/netscratch/gvitanov/envs/cnf/lib/python3.9/site-packages/torch/distributions/transformed_distribution.py", line 57, in __init__
    base_shape = base_distribution.batch_shape + base_distribution.event_shape
AttributeError: 'NoneType' object has no attribute 'batch_shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/netscratch/gvitanov/causal-flows-assumptions/main.py", line 46, in <module>
    preparator = SCMPreparator.loader(cfg.dataset)
  File "/netscratch/gvitanov/causal-flows-assumptions/causal_nf/preparators/scm/scm_preparator.py", line 121, in loader
    return cls(**my_dict)
  File "/netscratch/gvitanov/causal-flows-assumptions/causal_nf/preparators/scm/scm_preparator.py", line 84, in __init__
    self.scm = SCM(base_distribution=self.base_distribution, transform=sem)
  File "/netscratch/gvitanov/causal-flows-assumptions/causal_nf/distributions/scm.py", line 11, in __init__
    raise ValueError("Invalid SCM")
ValueError: Invalid SCM
srun: error: kersey: task 0: Exited with exit code 1
